plugins {
    id "org.sonarqube" version "1.0"
}
apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.jakewharton.hugo'
fileTree('scripts').each { apply from: "${it}" }

def API = 25
def minAPI = 16
def appId = 'ru.toddler'
def appVersionCode = gitCommitCount()
def appVersionName = "0.0.1.$appVersionCode"

sonarqube {
    properties {
        property "sonar.host.url", "http://8.8.8.8:9000"

        property "sonar.jdbc.url", "jdbc:postgresql://8.8.8.8:5432/sonar"
        property "sonar.jdbc.driverClassName", "org.postgresql.Driver"
        property "sonar.jdbc.username", "username"
        property "sonar.jdbc.password", "password"

        property "sonar.projectKey", "toddler_android"
        property "sonar.projectName", "toddler"
        property "sonar.projectVersion", appVersionName
        property "sonar.language", "java"
        property "sonar.sources", "src/main,src/production,src/stage"
        property "sonar.java.binaries", "build"
        property "sonar.tests", "src/androidTest"

        property "sonar.junit.reportsPath", "build/reports/coverage/debug"
        property "sonar.jacoco.reportPath", "build/outputs/code-coverage/connected/coverage.ec"
        property "sonar.java.coveragePlugin", "jacoco"
    }
}

android {
    compileSdkVersion API
    buildToolsVersion '25.0.1'

    defaultConfig {
        applicationId appId
        minSdkVersion minAPI
        targetSdkVersion API
        versionCode appVersionCode
        versionName appVersionName
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
        stage {
            applicationId appId + '.stage'
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21
        }
        production {
            // The actual minSdkVersion for the application.
            minSdkVersion minAPI
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    dataBinding {
        enabled = true
    }

    applicationVariants.all { variant ->

        def filename = "toddler-${variant.baseName}-${versionName}.apk"

        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent, filename)
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

retrolambda {
    jvmArgs '-noverify'
}

def supportVers = '25.0.1'
def retrofitVers = '2.1.0'
def okHttpVers = '3.4.1'
def jacksonVers = '2.8.3'
def autoValueVers = '1.3'
def daggerVers = '2.7'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:support-v4:$supportVers"
    compile "com.android.support:appcompat-v7:$supportVers"
    compile "com.android.support:design:$supportVers"
    compile "com.android.support:recyclerview-v7:$supportVers"
    compile "com.android.support:percent:$supportVers"

    // multidex
    compile 'com.android.support:multidex:1.0.1'

    // Dagger
    compile "com.google.dagger:dagger:$daggerVers"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVers"

    // Rest adapter
    compile "com.squareup.retrofit2:retrofit:$retrofitVers"
    compile "com.squareup.retrofit2:converter-jackson:$retrofitVers"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"

    // HTTP and WS
    compile "com.squareup.okhttp3:logging-interceptor:$okHttpVers"
    compile "com.squareup.okhttp3:okhttp-ws:$okHttpVers"

    // Jackson parser
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVers"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVers"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVers"

    // Java 8 streams compatible
    compile 'com.annimon:stream:1.1.2'

    // Reactive Java
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.4.0'
    compile "com.github.akarnokd:rxjava2-interop:0.6.2" // converter rxJava 1.x <-> 2.x

    // AutoValue
    provided "com.google.auto.value:auto-value:$autoValueVers"
    annotationProcessor "com.google.auto.value:auto-value:$autoValueVers"
    annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:0.2.4-rc2"
    annotationProcessor "com.gabrielittner.auto.value:auto-value-with:1.0.0"

    // Logging
    compile 'com.jakewharton.timber:timber:4.3.1'

    // Database
    compile 'nl.qbusict:cupboard:2.1.4'

    // Image loader
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    // Application inspection
    compile 'com.facebook.stetho:stetho:1.4.1' // base app inspection
    compile 'com.facebook.stetho:stetho-okhttp3:1.4.1' // network inspection depended on okhttp client

    // UI
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
    compile 'com.google.android:flexbox:0.2.3'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}